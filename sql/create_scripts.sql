CREATE TABLE APP_USERS (
	USER_ID VARCHAR(30),
	PASSWORD VARCHAR(30) NOT NULL,
	FIRST_NAME VARCHAR(30) NOT NULL,
	LAST_NAME VARCHAR(30) NOT NULL,
	CREATED_TIME TIMESTAMP NOT NULL,
	LAST_ACCESS_TIME TIMESTAMP NOT NULL, 
	USER_TYPE VARCHAR(10) CHECK (USER_TYPE IN ('Patient','Supporter','Both')),
	DOB DATE NOT NULL,
	GENDER CHAR(1) NOT NULL,
	STREET VARCHAR(100) NOT NULL,
	CITY VARCHAR(50) NOT NULL,
	STATE VARCHAR(30) NOT NULL,
	COUNTRY VARCHAR(30) NOT NULL,
	ZIP_CODE VARCHAR(5) NOT NULL,
	IS_ACTIVE VARCHAR(10) DEFAULT 'Inactive' CHECK (IS_ACTIVE IN ('Active','Inactive','Deleted')),
	CONSTRAINT APP_USERS_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE PATIENT_SUPPORTERS (
	USER_ID_PATIENT VARCHAR(30),
	USER_ID_SUPPORTER VARCHAR(30),
	AUTHORIZATION_DATE DATE,
	IS_PRIMARY NUMBER(1) DEFAULT 1 CHECK (IS_PRIMARY IN (0, 1)),
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	CONSTRAINT PATIENT_SUPPORTERS_PK PRIMARY KEY (USER_ID_PATIENT, USER_ID_SUPPORTER),
	CONSTRAINT PATIENT_SUPPORTERS_FK1 FOREIGN KEY (USER_ID_PATIENT) REFERENCES APP_USERS (USER_ID),
	CONSTRAINT PATIENT_SUPPORTERS_FK2 FOREIGN KEY (USER_ID_SUPPORTER) REFERENCES APP_USERS (USER_ID)
);

CREATE TABLE DISEASES (
	DISEASE_ID INTEGER,
	DISEASE_NAME VARCHAR(30),
	CONSTRAINT DISEASES_PK PRIMARY KEY (DISEASE_ID),
	CONSTRAINT DISEASES_UK UNIQUE (DISEASE_NAME)
);

INSERT INTO DISEASES VALUES (1, 'None');
INSERT INTO DISEASES VALUES (2, 'HIV');
INSERT INTO DISEASES VALUES (3, 'COPD');
INSERT INTO DISEASES VALUES (4, 'Heart Disease');

CREATE TABLE PATIENT_DISEASES (
	USER_ID VARCHAR(30),
	DISEASE_ID INTEGER,
	DIAGNOSED_ON TIMESTAMP,
	CURED_ON TIMESTAMP,
	STATUS NUMBER(1) DEFAULT 1 CHECK (STATUS IN (0, 1)),
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	CONSTRAINT PATIENT_DISEASES_PK PRIMARY KEY (USER_ID, DISEASE_ID),
	CONSTRAINT PATIENT_DISEASES_FK1 FOREIGN KEY (USER_ID) REFERENCES APP_USERS,
	CONSTRAINT PATIENT_DISEASES_FK2 FOREIGN KEY (DISEASE_ID) REFERENCES DISEASES
);

CREATE TABLE PATIENT_WEIGHTS (
	USER_ID VARCHAR(30),
	OBSERVATION_ID INTEGER,
	VALUE NUMBER(5,1),
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	OBSERVATION_TIME TIMESTAMP,
	RECORDING_TIME TIMESTAMP,
	CONSTRAINT PATIENT_WEIGHTS_PK PRIMARY KEY (OBSERVATION_ID),
	CONSTRAINT PATIENT_WEIGHTS_FK FOREIGN KEY (USER_ID) REFERENCES APP_USERS
);

CREATE SEQUENCE OBSERVATION_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE PATIENT_BPS (
	USER_ID VARCHAR(30),
	OBSERVATION_ID INTEGER,
	SYSTOLIC_VALUE INTEGER,
	DIASTOLIC_VALUE INTEGER,
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	OBSERVATION_TIME TIMESTAMP,
	RECORDING_TIME TIMESTAMP,
	CONSTRAINT PATIENT_BPS_PK PRIMARY KEY (OBSERVATION_ID),
	CONSTRAINT PATIENT_BPS_FK FOREIGN KEY (USER_ID) REFERENCES APP_USERS
);

CREATE TABLE PATIENT_OXYGEN_SATURATIONS (
	USER_ID VARCHAR(30),
	OBSERVATION_ID INTEGER,
	SPO2_LEVEL_VALUE INTEGER,
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	OBSERVATION_TIME TIMESTAMP,
	RECORDING_TIME TIMESTAMP,
	CONSTRAINT PATIENT_OXYGEN_SATURATIONS_PK PRIMARY KEY (OBSERVATION_ID),
	CONSTRAINT PATIENT_OXYGEN_SATURATIONS_FK FOREIGN KEY (USER_ID) REFERENCES APP_USERS
);

CREATE TABLE PATIENT_PAINS (
	USER_ID VARCHAR(30),
	OBSERVATION_ID INTEGER,
	VALUE INTEGER CHECK (VALUE IN(1,2,3,4,5,6,7,8,9,10)),
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	OBSERVATION_TIME TIMESTAMP,
	RECORDING_TIME TIMESTAMP,
	CONSTRAINT PATIENT_PAINS_PK PRIMARY KEY (OBSERVATION_ID),
	CONSTRAINT PATIENT_PAINS_FK FOREIGN KEY (USER_ID) REFERENCES APP_USERS
);

CREATE TABLE MOODS_TYPES(
	MOOD_TYPE_ID INTEGER,
	MOOD_NAME VARCHAR(10),
	CONSTRAINT MOODS_TYPES_PK PRIMARY KEY (MOOD_TYPE_ID)
);

INSERT INTO MOODS_TYPES VALUES (1, 'Happy');
INSERT INTO MOODS_TYPES VALUES (2, 'Neutral');
INSERT INTO MOODS_TYPES VALUES (3, 'Sad');

CREATE TABLE PATIENT_MOODS (
	USER_ID VARCHAR(30),
	OBSERVATION_ID INTEGER,
	MOOD_VALUE INTEGER,
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	OBSERVATION_TIME TIMESTAMP,
	RECORDING_TIME TIMESTAMP,
	CONSTRAINT PATIENT_MOODS_PK PRIMARY KEY (OBSERVATION_ID),
	CONSTRAINT PATIENT_MOODS_FK FOREIGN KEY (MOOD_VALUE) REFERENCES MOODS_TYPES(MOOD_TYPE_ID),
	CONSTRAINT PATIENT_MOODS_FK1 FOREIGN KEY (USER_ID) REFERENCES APP_USERS
);

CREATE TABLE PATIENT_TEMPERATURES (
	USER_ID VARCHAR(30),
	OBSERVATION_ID INTEGER,
	VALUE NUMBER(4,1),
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	OBSERVATION_TIME TIMESTAMP,
	RECORDING_TIME TIMESTAMP,
	CONSTRAINT PATIENT_TEMPERATURES_PK PRIMARY KEY (OBSERVATION_ID),
	CONSTRAINT PATIENT_TEMPERATURES_FK FOREIGN KEY (USER_ID) REFERENCES APP_USERS
);

CREATE TABLE DEFAULT_RECOMMENDATIONS(
	RECOMMENDATION_ID INTEGER,
	OBSERVATION_TYPE VARCHAR(15),
	DISEASE_ID INTEGER, 
	MIN_VALUE INTEGER,
	MAX_VALUE INTEGER,
	FREQUENCY INTEGER,
	CONSTRAINT DEFAULT_RECOMMENDATIONS_PK PRIMARY KEY (RECOMMENDATION_ID),
	CONSTRAINT DEFAULT_RECOMMENDATIONS_FK FOREIGN KEY (DISEASE_ID) REFERENCES DISEASES
);

CREATE SEQUENCE RECOMMENDATION_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE RECOMMENDATION_WEIGHTS (
	RECOMMENDATION_ID INTEGER,
	PATIENT_ID VARCHAR(30),
	SUPPORTER_ID VARCHAR(30),
	MIN_VALUE INTEGER,
	MAX_VALUE INTEGER,
	FREQUENCY INTEGER,
	CREATED_TIME TIMESTAMP,
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	CONSTRAINT RECOMMENDATION_WEIGHTS_PK PRIMARY KEY (RECOMMENDATION_ID),
	CONSTRAINT RECOMMENDATION_WEIGHTS_FK1 FOREIGN KEY (PATIENT_ID) REFERENCES APP_USERS(USER_ID),
	CONSTRAINT RECOMMENDATION_WEIGHTS_FK2 FOREIGN KEY (SUPPORTER_ID) REFERENCES APP_USERS(USER_ID)
);

CREATE TABLE RECOMMENDATION_BPS (
	RECOMMENDATION_ID INTEGER,
	PATIENT_ID VARCHAR(30),
	SUPPORTER_ID VARCHAR(30),
	SYSTOLIC_MIN_VALUE INTEGER,
	SYSTOLIC_MAX_VALUE INTEGER,
	DIASTOLIC_MIN_VALUE INTEGER,
	DIASTOLIC_MAX_VALUE INTEGER,
	FREQUENCY INTEGER,
	CREATED_TIME TIMESTAMP,
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	CONSTRAINT RECOMMENDATION_BPS_PK PRIMARY KEY (RECOMMENDATION_ID),
	CONSTRAINT RECOMMENDATION_BPS_FK1 FOREIGN KEY (PATIENT_ID) REFERENCES APP_USERS(USER_ID),
	CONSTRAINT RECOMMENDATION_BPS_FK2 FOREIGN KEY (SUPPORTER_ID) REFERENCES APP_USERS(USER_ID)
);

CREATE TABLE RECOMMENDATION_O2_SAT (
	RECOMMENDATION_ID INTEGER,
	PATIENT_ID VARCHAR(30),
	SUPPORTER_ID VARCHAR(30),
	SPO2_MIN_VALUE INTEGER,
	SPO2_MAX_VALUE INTEGER,
	FREQUENCY INTEGER,
	CREATED_TIME TIMESTAMP,
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	CONSTRAINT RECOMMENDATION_O2_SAT_PK PRIMARY KEY (RECOMMENDATION_ID),
	CONSTRAINT RECOMMENDATION_O2_SAT_FK1 FOREIGN KEY (PATIENT_ID) REFERENCES APP_USERS(USER_ID),
	CONSTRAINT RECOMMENDATION_O2_SAT_FK2 FOREIGN KEY (SUPPORTER_ID) REFERENCES APP_USERS(USER_ID)
);

CREATE TABLE RECOMMENDATION_PAINS (
	RECOMMENDATION_ID INTEGER,
	PATIENT_ID VARCHAR(30),
	SUPPORTER_ID VARCHAR(30),
	PAIN_VALUE INTEGER CHECK (PAIN_VALUE IN(1,2,3,4,5,6,7,8,9,10)),
	FREQUENCY INTEGER,
	CREATED_TIME TIMESTAMP,
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	CONSTRAINT RECOMMENDATION_PAINS_PK PRIMARY KEY (RECOMMENDATION_ID),
	CONSTRAINT RECOMMENDATION_PAINS_FK1 FOREIGN KEY (PATIENT_ID) REFERENCES APP_USERS(USER_ID),
	CONSTRAINT RECOMMENDATION_PAINS_FK2 FOREIGN KEY (SUPPORTER_ID) REFERENCES APP_USERS(USER_ID)
);

CREATE TABLE RECOMMENDATION_MOODS (
	RECOMMENDATION_ID INTEGER,
	PATIENT_ID VARCHAR(30),
	SUPPORTER_ID VARCHAR(30),
	MOOD_VALUE INTEGER,
	FREQUENCY INTEGER,
	CREATED_TIME TIMESTAMP,
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	CONSTRAINT RECOMMENDATION_MOODS_PK PRIMARY KEY (RECOMMENDATION_ID),
	CONSTRAINT RECOMMENDATION_MOODS_FK1 FOREIGN KEY (PATIENT_ID) REFERENCES APP_USERS(USER_ID),
	CONSTRAINT RECOMMENDATION_MOODS_FK2 FOREIGN KEY (SUPPORTER_ID) REFERENCES APP_USERS(USER_ID),
	CONSTRAINT RECOMMENDATION_MOODS_FK3 FOREIGN KEY (MOOD_VALUE) REFERENCES MOODS_TYPES(MOOD_TYPE_ID)
);

CREATE TABLE RECOMMENDATION_TEMPERATURES (
	RECOMMENDATION_ID INTEGER, 
	PATIENT_ID VARCHAR(30),
	SUPPORTER_ID VARCHAR(30),
	MIN_VALUE INTEGER,
	MAX_VALUE INTEGER,
	FREQUENCY INTEGER,
	CREATED_TIME TIMESTAMP,
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	CONSTRAINT RECOMMENDATION_TEMP_PK PRIMARY KEY (RECOMMENDATION_ID),
	CONSTRAINT RECOMMENDATION_TEMP_FK1 FOREIGN KEY (PATIENT_ID) REFERENCES APP_USERS(USER_ID),
	CONSTRAINT RECOMMENDATION_TEMP_FK2 FOREIGN KEY (SUPPORTER_ID) REFERENCES APP_USERS(USER_ID)
);

CREATE TABLE ALERTS(
	ALERT_ID INTEGER,
	PATIENT_ID VARCHAR(30),
	ALERT_TYPE NUMBER(1),
	OBSERVATION_TYPE VARCHAR(15),
	ALERT_MESSAGE VARCHAR(1000),
	TRIGGERED_TIME TIMESTAMP,
	CLEARED_TIME TIMESTAMP,
	CLEARED_BY VARCHAR(30),
	CLEARED_REASON VARCHAR(1000),
	STATUS NUMBER(1) CHECK (STATUS IN(0,1)),
	IS_ACTIVE VARCHAR(10) DEFAULT 'Active' CHECK (IS_ACTIVE IN ('Active','Deleted')),
	CONSTRAINT ALERTS_PK PRIMARY KEY (ALERT_ID),
	CONSTRAINT ALERTS_FK1 FOREIGN KEY (PATIENT_ID) REFERENCES APP_USERS(USER_ID),
	CONSTRAINT ALERTS_FK2 FOREIGN KEY (CLEARED_BY) REFERENCES APP_USERS(USER_ID)
);

CREATE SEQUENCE ALERTS_SEQ START WITH 1 INCREMENT BY 1;
